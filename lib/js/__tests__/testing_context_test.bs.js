// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var React = require("react");
var ReactHooks = require("@testing-library/react-hooks");

function Context(Config) {
  var context = React.createContext(Config[/* defaultValue */0]);
  var make = context.Provider;
  var Provider = /* module */[/* make */make];
  return /* module */[
          /* context */context,
          /* Provider */Provider
        ];
}

var context = React.createContext("foo");

var make = context.Provider;

var Provider = /* module */[/* make */make];

var TestContext = /* module */[
  /* context */context,
  /* Provider */Provider
];

function Testing_context_test$Provider(Props) {
  var children = Props.children;
  return React.createElement(make, {
              value: "bar",
              children: children
            });
}

var Provider$1 = /* module */[/* make */Testing_context_test$Provider];

Jest.describe("useContext", (function (param) {
        var options = {
          wrapper: Testing_context_test$Provider
        };
        var container = ReactHooks.renderHook((function () {
                return React.useContext(context);
              }), options);
        return Jest.test("context value from context provider is 'bar'", (function (param) {
                      return Jest.Expect[/* toEqual */12]("bar", Jest.Expect[/* expect */0](container.result.current));
                    }));
      }));

exports.Context = Context;
exports.TestContext = TestContext;
exports.Provider = Provider$1;
/* context Not a pure module */
