// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var React = require("react");
var ReactHooks = require("@testing-library/react-hooks");

var themeContext = React.createContext("light");

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = themeContext.Provider;

var ContextProvider = /* module */[
  /* themeContext */themeContext,
  /* makeProps */makeProps,
  /* make */make
];

function Context_test$App(Props) {
  var children = Props.children;
  return React.createElement("div", undefined, React.createElement(make, makeProps("dark", children, /* () */0)));
}

var App = /* module */[/* make */Context_test$App];

Jest.describe("useContext", (function (param) {
        var options = {
          initialProps: themeContext,
          wrapper: Context_test$App
        };
        var container = ReactHooks.renderHook((function (context) {
                return React.useContext(context);
              }), options);
        return Jest.test("context value from context provider is 'dark'", (function (param) {
                      return Jest.Expect[/* toEqual */12]("dark", Jest.Expect[/* expect */0](container.result.current));
                    }));
      }));

exports.ContextProvider = ContextProvider;
exports.App = App;
/* themeContext Not a pure module */
